name: Distribute Linux artifact

on:
  # Reusable workflows (other workflows can trigger this)
  workflow_call:
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Prepare access to everything
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Decode Local properties
        run: | 
          echo "${{ secrets.LOCAL_PROPERTIES }}" | base64 --decode > ${{ github.workspace }}/local.properties
          awk '{if ($1 == "storeFile=") print "storeFile=${{ github.workspace }}/keystore.jks"; else print $0}' ${{ github.workspace }}/local.properties > temp && mv temp ${{ github.workspace }}/local.properties
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > ${{ github.workspace }}/keystore.jks
      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES }}" | base64 --decode > ${{ github.workspace }}/composeApp/google-services.json


      # Prepare the environment
      - name: Build with Gradle and Print Version
        id: gradle
        run: |
          VERSION=$(./gradlew -q printVersionName)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Linux - Deb
      - name: Build Linux Release
        run: ./gradlew packageReleaseDeb

      - name: Move and rename DEB file
        run: |
          mkdir -p downloads/${{ env.VERSION }}
          mv ${{ github.workspace }}/composeApp/build/compose/binaries/main-release/deb/chatrich_${{ env.VERSION }}-1_amd64.deb downloads/${{ env.VERSION }}/Chatrich.deb

      - name: Upload DEB file to FTP
        uses: GenieTim/ftp-action@v4.0.1
        with:
          host: ${{ secrets.FTP_SERVER_DOMAIN }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          localDir: "downloads/${{ env.VERSION }}/"
          remoteDir: "www/"