name: Distribute Windows artifact

on:
  # Reusable workflows (other workflows can trigger this)
  workflow_call:
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Saves up some space
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Local properties
        run: |
          echo "${{ secrets.LOCAL_PROPERTIES }}" > local.properties.b64
          certutil -decode local.properties.b64 ${{ github.workspace }}\local.properties

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.jks.b64
          certutil -decode keystore.jks.b64 ${{ github.workspace }}\keystore.jks

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" > google-services.json.b64
          certutil -decode google-services.json.b64 ${{ github.workspace }}\composeApp\google-services.json

      # Prepare the environment
      - name: Build with Gradle and Print Version
        id: gradle
        run: |
          $version = ./gradlew -q printVersionName
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: pwsh

      # Windows - Msi
      - name: Build Windows Release
        run: ./gradlew packageReleaseMsi

      - name: List files with sizes
        run: |
          dir ${{ github.workspace }}\composeApp\build\compose\binaries

      - name: Move and rename MSI file
        run: |
          mkdir downloads\\${{ env.VERSION }}
          move ${{ github.workspace }}\composeApp\build\\compose\binaries\main-release\msi\Chatrich-${{ env.VERSION }}.msi downloads\${{ env.VERSION }}\Chatrich.msi

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.ACTION_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'git@github.com'
          git add downloads\${{ env.VERSION }}\Chatrich.msi
          git commit -m 'Add msi (Windows) installer'
          git push origin master --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}